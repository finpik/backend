type Query {
    getLoanProductList(
        profileId: Long!,
        page: Int!,
        size: Int!,
        sortProperty: String!
        sortDirection: SortDirection = DESC
    ): RecommendedLoanProductResultList!

    getLoanProduct(loanProductId: Long!): LoanProductResult!
    getRelatedLoanProductList(loanProductId: Long!): [RelatedLoanProductResult]!
}

type RecommendedLoanProductResultList {
    content: [RecommendedLoanProductResult]!,
    hasNext: Boolean,
    page: Int,
    size: Int
}

type RecommendedLoanProductResult {
    recommendedLoanProductId: Long!
    profileId: Long!
    bankName: String!
    loanProductId: Long!
    productName: String!
    minInterestRate: Float
    maxInterestRate: Float
    maxLoanLimitAmount: Long
}

type LoanProductResult {
    productName: String!
    bankName: String!
    maxLoanLimitAmount: Int
    maxInterestRate: Float
    minInterestRate: Float
    repaymentPeriod: Int
    repaymentPeriodUnit: RepaymentPeriodUnit
    descriptionResult: LoanProductDescriptionResult!
    url: String!
    loanProductBadgeList: [LoanProductBadgeList]
}

type LoanProductDescriptionResult {
    loanPrerequisite: String
    loanTargetGuide: String
    interestRateGuide: String
    maxLoanLimitGuide: String
    repaymentPeriodGuide: String
    notesOnLoan: String
    preLoanChecklist: String!
}

type RelatedLoanProductResult {
    loanProductId: Long!,
    productName: String!,
    bankName: String!,
    maxInterestRate: Float,
    minInterestRate: Float,
    maxLoanLimitAmount: Int
}

enum RepaymentPeriodUnit {
    YEAR, MONTH
}

enum SortDirection {
    ASC,
    DESC,
}

enum LoanProductBadgeList {
    LOWEST_MIN_INTEREST_RATE,
    BEST_PROFILE_MATCH,
    HIGHEST_MAX_LOAN_AMOUNT_LIMIT,
    INSTANT_DEPOSIT,
}
